services:
  db:
    image: postgres:14
    environment:
      POSTGRES_DB: gamedb
      POSTGRES_USER: gameuser
      POSTGRES_PASSWORD: gamepass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  backend:
    build:
      context: ./gamesearch
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./gamesearch:/app
    ports:
      - "8000:8000"
    environment:
      - DB_NAME=gamedb
      - DB_USER=gameuser
      - DB_PASSWORD=gamepass
      - DB_HOST=db
      - DB_PORT=5432
    depends_on:
      - db
      - rabbitmq
    networks:
      - app-network

  frontend:
    build:
      context: ./game-finder
    volumes:
    #   - ./game-finder:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    depends_on:
      - db
    networks:
      - app-network

  celery:
    build:
      context: ./gamesearch
    command: celery -A gamesearch worker --loglevel=info -Q game-tasks,default
    volumes:
      - ./gamesearch:/app
    depends_on:
      - backend
      - rabbitmq
    environment:
      - DB_NAME=gamedb
      - DB_USER=gameuser
      - DB_PASSWORD=gamepass
      - DB_HOST=db
      - DB_PORT=5432
    networks:
      - app-network
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"     # Port AMQP do komunikacji z Celery
      - "15672:15672"   # Panel zarzÄ…dzania RabbitMQ
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app-network
  


volumes:
  postgres_data:

networks:
  app-network:
